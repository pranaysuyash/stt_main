"""empty message

Revision ID: 64a002a048a1
Revises: 609889df561f
Create Date: 2024-10-13 01:06:02.780921

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '64a002a048a1'
down_revision = '609889df561f'
branch_labels = None
depends_on = None


def upgrade():
    # Alter column with 'USING' clause for PostgreSQL compatibility
    op.execute(
        "ALTER TABLE analysis_results ALTER COLUMN media_file_id TYPE INTEGER USING media_file_id::integer"
    )

    op.create_foreign_key(None, 'analysis_results', 'media_files', ['media_file_id'], ['id'])

    # Drop and recreate the foreign key on media_file_tags
    op.drop_constraint('media_file_tags_media_file_id_fkey', 'media_file_tags', type_='foreignkey')
    op.create_foreign_key(None, 'media_file_tags', 'media_files', ['media_file_id'], ['id'])

    # Remove obsolete indexes
    op.drop_index('ix_files_size', table_name='media_files')
    op.drop_index('ix_media_files_path', table_name='media_files')

    # Update index with unique constraint removed
    op.drop_index('ix_media_files_filename', table_name='media_files')
    op.create_index(op.f('ix_media_files_filename'), 'media_files', ['filename'], unique=False)

    # Add new foreign key on media_files table
    op.create_foreign_key(None, 'media_files', 'users', ['user_id'], ['id'])

    # Drop unused columns from media_files
    op.drop_column('media_files', 'path')
    op.drop_column('media_files', 'size')
    op.drop_column('media_files', 'type')

    # Alter column in processed_artifacts with 'USING' clause
    op.execute(
        "ALTER TABLE processed_artifacts ALTER COLUMN media_file_id TYPE INTEGER USING media_file_id::integer"
    )

    op.create_foreign_key(None, 'processed_artifacts', 'media_files', ['media_file_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'processed_artifacts', type_='foreignkey')
    op.alter_column('processed_artifacts', 'media_file_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.add_column('media_files', sa.Column('type', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('media_files', sa.Column('size', sa.BIGINT(), autoincrement=False, nullable=False))
    op.add_column('media_files', sa.Column('path', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'media_files', type_='foreignkey')
    op.drop_index(op.f('ix_media_files_filename'), table_name='media_files')
    op.create_index('ix_media_files_filename', 'media_files', ['filename'], unique=True)
    op.create_index('ix_media_files_path', 'media_files', ['path'], unique=True)
    op.create_index('ix_files_size', 'media_files', ['size'], unique=False)
    op.drop_constraint(None, 'media_file_tags', type_='foreignkey')
    op.create_foreign_key('media_file_tags_media_file_id_fkey', 'media_file_tags', 'media_files', ['media_file_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'analysis_results', type_='foreignkey')
    op.alter_column('analysis_results', 'media_file_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=True)
    # ### end Alembic commands ###
